html
<div class="home-center dark-theme">
  <section class="prompt-card" role="region" aria-labelledby="promptTitle">
    <h2 class="title" id="promptTitle">Ask Anything</h2>
    <p class="subtitle">Type your question or search query below and get instant results.</p>

    <label class="sr-only" for="promptInput">Your prompt</label>
    <textarea
      id="promptInput"
      class="prompt-input"
      [(ngModel)]="prompt"
      placeholder="Type your prompt here…"
      (keydown.control.enter)="submitPrompt()"
      (keydown.meta.enter)="submitPrompt()"
      [attr.aria-busy]="isSubmitting"
    ></textarea>

    <div class="actions">
      <button
        class="clear-btn"
        type="button"
        (click)="clearPrompt()"
        [disabled]="!prompt.length || isSubmitting"
        [attr.aria-disabled]="!prompt.length || isSubmitting"
      >
        Clear
      </button>

      <button
        class="primary-btn"
        type="button"
        (click)="submitPrompt()"
        [disabled]="isSubmitDisabled"
        [attr.aria-disabled]="isSubmitDisabled"
      >
        {{ isSubmitting ? 'Submitting…' : 'Submit' }}
      </button>
    </div>

    <div *ngIf="summary" class="summary" aria-live="polite">
      <h3>Summary</h3>
      <p>{{ summary }}</p>
    </div>

    <div *ngIf="submittedPrompts.length > 0" class="submitted-prompts">
      <h3 class="submitted-title">Submitted Prompts</h3>
      <div *ngFor="let p of submittedPrompts; trackBy: p.prompt" class="prompt-card-small">
        <p>
          "<strong>{{ p.prompt }}</strong>" — <strong>{{ p.count }}</strong> result{{ p.count === 1 ? '' : 's' }}
          <button
            class="toggle-summary-btn"
            (click)="p.show = !p.show"
            aria-label="Toggle summary"
            [attr.aria-expanded]="p.show ?? false"
          >
            <span [class.rotated]="p.show">▼</span>
          </button>
        </p>

        <div *ngIf="p.show" class="summary-content" aria-live="polite">
          <p><strong>Summary:</strong> <em>{{ p.summary }}</em></p>
        </div>
      </div>
    </div>

    <div *ngIf="results.length > 0" class="api-results" aria-live="polite">
      <h3 class="submitted-title">Search Results ({{ resultCount }} profiles found)</h3>
      <article *ngFor="let profile of results; trackBy: profile.recordid" class="profile-card">
        <header>
          <h4>{{ profile.Name }} <span class="role">({{ profile.Role }})</span></h4>
        </header>
        <ul>
          <li><strong>Skills:</strong> {{ profile.Skills }}</li>
          <li><strong>Experience:</strong> {{ profile.ExperienceYears }} years</li>
          <li><strong>Industry:</strong> {{ profile.Industry }}</li>
          <li><strong>Location:</strong> {{ profile.Location }}</li>
          <li><strong>Summary:</strong> {{ profile.ProfileSummary }}</li>
        </ul>
      </article>
    </div>
  </section>
</div>

css
/* General page setup */
html, body {
  height: 100%;
  margin: 0;
  font-family: 'Segoe UI', Roboto, sans-serif;
}

/* Centering wrapper + dark page background */
.home-center.dark-theme {
  display: grid;
  place-items: center;
  background: radial-gradient(80rem 50rem at 10% 0%, #152043 0%, transparent 55%),
              radial-gradient(70rem 40rem at 90% 100%, #0d3b66 0%, transparent 55%),
              linear-gradient(180deg, #0f172a 0%, #0f172a 100%);
  color: #f1f1f1;
}

/* Prompt Card Styling */
.prompt-card {
  width: min(500px, 90vw);
  background: rgba(20, 24, 50, 0.95);
  backdrop-filter: blur(12px);
  border-radius: 16px;
  padding: 28px 24px;
  box-shadow: 0 25px 50px rgba(0,0,0,0.4);
  animation: floatIn 0.5s ease-out both;
  display: flex;
  flex-direction: column;
  gap: 12px;
}

/* Title and Subtitle */
.title {
  font-size: 1.6rem;
  color: #00bcd4;
  margin: 0;
  font-weight: 700;
  text-align: center;
}

.subtitle {
  font-size: 0.95rem;
  color: #a3b0c3;
  text-align: center;
  margin-bottom: 16px;
}

/* Textarea Input */
.prompt-input {
  width: 100%;
  min-height: 140px;
  padding: 16px;
  border-radius: 12px;
  border: 1.5px solid rgba(255,255,255,0.15);
  background: rgba(25,38,95,0.85);
  color: #f1f1f1;
  font-size: 1rem;
  resize: vertical;
  outline: none;
  transition: border 0.2s ease, box-shadow 0.2s ease;
}

.prompt-input:focus {
  border-color: #00bcd4;
  box-shadow: 0 0 8px rgba(0,188,212,0.5);
}

/* Buttons Row */
.actions {
  display: flex;
  justify-content: flex-end;
  gap: 12px;
  margin-top: 12px;
}

/* Buttons */
.primary-btn, .clear-btn {
  padding: 10px 20px;
  border-radius: 12px;
  font-weight: 600;
  cursor: pointer;
  border: none;
  transition: all 0.2s ease;
}

.primary-btn {
  background: linear-gradient(180deg, #00bcd4 0%, #008c9e 100%);
  color: #fff;
  box-shadow: 0 6px 18px rgba(0,188,212,0.35);
}

.primary-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 20px rgba(0,188,212,0.45);
}

.primary-btn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  box-shadow: none;
}

/* Clear button */
.clear-btn {
  background: transparent;
  border: 1px solid rgba(255,255,255,0.2);
  color: #f1f1f1;
}

.clear-btn:hover {
  background: rgba(255,255,255,0.1);
}

/* Summary Section */
.summary {
  margin-top: 16px;
  padding: 14px;
  border-left: 4px solid #00bcd4;
  border-radius: 8px;
  background: rgba(255,255,255,0.05);
  animation: fadeIn 0.3s ease-in-out;
}

/* Submitted Prompts */
.submitted-prompts {
  margin-top: 20px;
}

.prompt-card-small {
  background: rgba(0,188,212,0.1);
  padding: 10px 14px;
  border-radius: 12px;
  margin-bottom: 10px;
  font-size: 0.95rem;
  color: #f1f1f1;
  display: flex;
  flex-direction: column;
}

.submitted-title {
  text-align: center;
  font-weight: 600;
  font-size: 1.2rem;
  margin-bottom: 12px;
  color: #00bcd4;
}

/* Toggle summary button */
.toggle-summary-btn {
  background: none;
  border: none;
  cursor: pointer;
  color: #00bcd4;
  font-size: 1rem;
  margin-left: 6px;
}

.toggle-summary-btn span {
  display: inline-block;
  transition: transform 0.3s ease;
}

.toggle-summary-btn span.rotated {
  transform: rotate(180deg);
}

/* Profile Cards */
.profile-card {
  background: rgba(30,30,30,0.95);
  border-radius: 12px;
  padding: 16px;
  margin-bottom: 16px;
  color: #eee;
  box-shadow: 0 4px 20px rgba(0,0,0,0.3);
}

.profile-card h4 {
  margin: 0 0 6px;
  color: #00bcd4;
}

.profile-card .role {
  font-weight: normal;
  font-size: 0.9rem;
  color: #aaa;
}

.profile-card ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

.profile-card li {
  margin-bottom: 6px;
}

/* Animations */
@keyframes floatIn {
  from { opacity: 0; transform: translateY(12px) scale(0.98); }
  to { opacity: 1; transform: translateY(0) scale(1); }
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-4px); }
  to { opacity: 1; transform: translateY(0); }
}
