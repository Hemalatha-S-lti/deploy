1. Understanding the Project (Step by Step)

Problem Statement (What the issue is):

Traditional keyword-based searches in enterprise apps often return irrelevant results because they don’t understand the user’s intent.

Voice search in existing systems lacks context, often giving generic or incorrect answers.

Overall, users face poor experience and inefficiency, especially in HR and organizational systems.

Objective (Why we did it):

Integrate Azure AI Semantic Search and Voice Search to allow users to find employees using natural language queries and voice commands.

Improve search accuracy, accessibility, and overall user experience.

Make it intuitive for non-technical users, so they can just speak or type naturally.

Tech Stack (What tools we used):

Frontend: Angular

Backend: Cosmos DB + Fast API

AI Model: GPT-4o-mini (LLM)

DevOps: Azure DevOps for CI/CD and deployment

Benefits (How it helps users):

Semantic Search:

Understands user intent and context → more relevant results.

Supports natural language queries like: “Find employees skilled in Angular and Azure.”

Voice Search:

Hands-free search → ideal for mobile or field use.

Accessibility → supports users with disabilities or who prefer voice.

Architecture (How it works):

User Query (Text/Voice): Captured via Angular frontend.

Backend Processing: Fast API processes the request.

Semantic Search + LLM: GPT-4o-mini processes intent and context, integrates with Azure Cognitive Search indexes.

Database: Cosmos DB stores employee data and indexes.

Response: Relevant results are returned to the user via frontend.

Results:

Users can efficiently search employees with natural language or voice commands.

More accurate, intuitive, and inclusive compared to traditional search systems.

Future Enhancements:

Integrate Azure AI Knowledge Agent for:

Multi-source orchestration

Context retention across queries

Intelligent answer synthesis

This will further reduce response time, increase accuracy, and provide a smarter system.

2. How to Present in Review (Speech)

You can say something like:

*"In this project, our goal was to enhance enterprise HR systems by integrating Azure AI Semantic Search and Voice Search. Traditional search fails to understand user intent, often returning irrelevant results, and voice search lacked contextual understanding.

We built a solution using Angular for frontend, Cosmos DB for backend, and Fast API to connect everything. We deployed GPT-4o-mini as our AI model for natural language understanding and semantic search.

This allows users to search employees using conversational text or voice commands. For example, someone can say, 'Find employees skilled in Angular and Azure,' and get accurate results.

I was responsible for the frontend development and integrating the Azure AI services. I designed the prompt window, connected it to AI endpoints, and tested the end-to-end workflow, ensuring seamless communication between the user interface and backend services.

The project improves accuracy, accessibility, and overall user experience. In the future, we plan to enhance it with Azure AI Knowledge Agent to provide context retention and smarter, multi-source answers."*

If you want, I can also prepare a super-short version (1–2 minutes) you can say fluently without reading, and a slightly longer technical version for deeper questioning.

Do you want me to do that next?

Yes! Here’s a ready-to-use version for your review:

Short Version (1–2 minutes)

*"Our project enhances enterprise HR systems by integrating Azure AI Semantic Search and Voice Search. Traditional search often returns irrelevant results and voice search lacks context.

We used Angular for frontend, Cosmos DB for backend, Fast API, and GPT-4o-mini for AI processing. Users can now search employees using natural language or voice commands, like 'Find employees skilled in Angular and Azure,' and get accurate results.

I handled frontend development and AI integration, designed the prompt window, connected it to AI endpoints, and tested end-to-end functionality.

This solution improves search accuracy, accessibility, and user experience. In the future, we plan to integrate Azure AI Knowledge Agent for smarter, context-aware responses."*

Technical Version (3–4 minutes, if asked deeper questions)

*"The problem we addressed is that traditional keyword-based search doesn’t understand user intent, and voice search often provides generic or incorrect results.

Our solution integrates Azure AI Semantic Search and Voice Search. The tech stack includes Angular for frontend, Cosmos DB for backend, Fast API for connecting services, and GPT-4o-mini for natural language understanding.

The architecture works like this: the user inputs a query (text or voice) → Fast API processes it → GPT-4o-mini interprets intent → Azure Cognitive Search indexes are queried → relevant results are returned to the frontend.

I was responsible for frontend development and Azure AI integration, including:

Designing and implementing the prompt window for text/voice queries

Connecting the UI with AI model endpoints

Testing and validating end-to-end functionality on Azure Web App

The benefits are improved accuracy, intuitive natural language queries, hands-free interaction, and accessibility. Future enhancements include using Azure AI Knowledge Agent for multi-source orchestration, context retention, and intelligent answer synthesis."*
