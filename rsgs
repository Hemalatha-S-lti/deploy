<div class="home-container">
  <!-- Left Column: Prompt Section & History -->
  <div class="prompt-section">
    <div class="prompt-card centered-card">
      <h2 class="title">TalentAI</h2>
      <p class="subtitle">Discover Top Talent Instantly</p>

      <label class="sr-only" for="promptInput">Enter your search prompt</label>
      <textarea
        id="promptInput"
        class="prompt-input"
        [(ngModel)]="prompt"
        placeholder="Type a skill, role, or keyword e.g., 'Cloud Architect with Azure skills'"
        (keydown.control.enter)="submitPrompt()"
        (keydown.meta.enter)="submitPrompt()"
      ></textarea>

      <div class="actions">
        <button
          class="clear-btn"
          type="button"
          (click)="clearPrompt()"
          [disabled]="!prompt.length || isSubmitting"
        >
          Clear
        </button>
        <button
          class="primary-btn"
          type="button"
          (click)="submitPrompt()"
          [disabled]="isSubmitDisabled"
        >
          <ng-container *ngIf="isSubmitting; else submitText">
            <span class="spinner"></span>
          </ng-container>
          <ng-template #submitText>Search</ng-template>
        </button>
      </div>
    </div>

    <!-- Recently submitted prompts -->
    <div *ngIf="submittedPrompts.length > 0" class="submitted-prompts">
      <h3 class="submitted-title">Recent Searches</h3>
      <div
        class="prompt-card-small"
        *ngFor="let p of submittedPrompts.slice().reverse(); let i = index; trackBy: trackByPrompt"
      >
        <div class="prompt-history-header" (click)="toggleSummary(submittedPrompts.length - 1 - i)">
          "<strong>{{ p.prompt }}</strong>" ({{ p.count }})
          <span class="toggle-arrow" [class.rotated]="p.show">▼</span>
        </div>
        <div *ngIf="p.show" class="summary-content">
          <p>
            <strong>Summary:</strong> <em>{{ p.summary }}</em>
          </p>
        </div>
      </div>
    </div>
  </div>

  <!-- Right Column: Results Section -->
  <div class="results-section">
    <div *ngIf="results.length > 0; else placeholder">
      <div class="results-header">
        <h3>Showing {{ resultCount }} candidates for:</h3>
        <p class="last-prompt">"{{ lastPrompt }}"</p>
      </div>

      <div *ngIf="summary" class="summary-card">
        <h4>AI Summary</h4>
        <p>{{ summary }}</p>
      </div>

      <details *ngIf="intent || searchRequest" class="details-dropdown">
        <summary>Show Search Details</summary>
        <div *ngIf="intent">
          <h4>Intent</h4>
          <pre class="code-block">{{ intent | json }}</pre>
        </div>
        <div *ngIf="searchRequest">
          <h4>Azure Search Request</h4>
          <pre class="code-block">{{ searchRequest | json }}</pre>
        </div>
      </details>

      <div class="profile-grid">
        <div
          class="profile-card"
          *ngFor="let profile of results; let i = index; trackBy: trackByResult"
          [style.animation-delay]="i * 100 + 'ms'"
        >
          <div class="profile-header">
            <div class="profile-avatar">{{ profile.Name | slice:0:1 }}</div>
            <div class="profile-info">
              <h4 class="profile-name">{{ profile.Name }}</h4>
              <p class="profile-role">{{ profile.Role }}</p>
            </div>
          </div>
          <div class="profile-body">
            <p class="profile-summary">{{ profile.ProfileSummary }}</p>
            <div class="profile-details">
              <span><strong>Location:</strong> {{ profile.Location }}</span>
              <span><strong>Experience:</strong> {{ profile.ExperienceYears }} years</span>
              <span><strong>Industry:</strong> {{ profile.Industry }}</span>
            </div>
            <div class="profile-skills">
              <strong>Skills:</strong>
              <div class="skills-tags">
                <span class="skill-tag" *ngFor="let skill of profile.Skills.split(', ')">
                  {{ skill }}
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <ng-template #placeholder>
      <div class="placeholder">
        <div class="placeholder-icon">✨</div>
        <h3>Welcome to TalentAI</h3>
        <p>Type a skill or role above to instantly find top talent.</p>
      </div>
    </ng-template>
  </div>
</div>


:root {
  --background-dark: #0e0e0e;
  --background-light: #1f1f1f;
  --primary-color: #4caf50;
  --primary-hover: #43a047;
  --text-primary: #ffffff;
  --text-secondary: #b0b0b0;
  --border-color: #333;
  --card-shadow: 0 15px 40px rgba(0,0,0,0.6);
  --font-style: 'Poppins', sans-serif;
}

html, body {
  height: 100%;
  margin: 0;
  font-family: var(--font-style);
  background: var(--background-dark);
  color: var(--text-primary);
}

.home-container {
  display: flex;
  height: 100vh;
  overflow: hidden;
  justify-content: center;
  align-items: center;
}

/* Left Column */
.prompt-section {
  width: 40%;
  min-width: 420px;
  padding: 2rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  background: var(--background-light);
  border-radius: 15px;
  box-shadow: var(--card-shadow);
}

.centered-card {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.title {
  font-size: 2.3rem;
  font-weight: 800;
  color: var(--primary-color);
  margin-bottom: 0.3rem;
  letter-spacing: 1px;
}

.subtitle {
  font-size: 1.1rem;
  color: var(--text-secondary);
  margin-bottom: 1.5rem;
  text-align: center;
  line-height: 1.3rem;
}

.prompt-input {
  width: 100%;
  min-height: 140px;
  background: #2b2b2b;
  color: #fff;
  font-size: 1.1rem;
  font-weight: 500;
  font-family: var(--font-style);
  border-radius: 12px;
  border: 1px solid var(--border-color);
  padding: 1rem 1.2rem;
  outline: none;
  resize: vertical;
  box-shadow: inset 0 0 5px rgba(0,0,0,0.5);
}

.prompt-input::placeholder {
  color: #aaa;
  font-style: italic;
}

.prompt-input:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 10px rgba(76,175,80,0.5);
}

/* Buttons */
.actions {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-top: 1.5rem;
}

.clear-btn, .primary-btn {
  padding: 0.7rem 1.6rem;
  border-radius: 10px;
  font-weight: 600;
  cursor: pointer;
  font-size: 1rem;
  transition: all 0.3s ease;
}

.clear-btn {
  background: transparent;
  color: var(--text-secondary);
  border: 1px solid var(--border-color);
}

.clear-btn:hover { background: #333; }

.primary-btn:not(:disabled) {
  background: var(--primary-color);
  color: #fff;
}

.primary-btn:not(:disabled):hover {
  background: var(--primary-hover);
}

.primary-btn:disabled { background: #555; color: #888; cursor: not-allowed; }

.spinner {
  width: 20px;
  height: 20px;
  border: 3px solid rgba(255,255,255,0.3);
  border-top-color: #fff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin { to { transform: rotate(360deg); } }

/* Recent Searches */
.submitted-prompts {
  margin-top: 2rem;
  width: 100%;
}

.prompt-card-small {
  background: rgba(76,175,80,0.1);
  padding: 10px 14px;
  border-radius: 10px;
  margin-bottom: 10px;
  cursor: pointer;
}

.summary-content {
  margin-top: 0.5rem;
  padding: 0.5rem 1rem;
  background: rgba(76,175,80,0.15);
  border-left: 4px solid var(--primary-color);
  border-radius: 6px;
}

/* Results Section */
.results-section {
  flex-grow: 1;
  padding: 2rem;
  overflow-y: auto;
  margin-left: 2rem;
}

.profile-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill,minmax(280px,1fr));
  gap: 1.5rem;
}

.profile-card {
  background: #1f1f1f;
  border-radius: 12px;
  padding: 1rem;
  box-shadow: 0 5px 25px rgba(0,0,0,0.6);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  opacity: 0;
  transform: translateY(20px);
  animation: slideInUp 0.5s forwards;
}

.profile-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 12px 35px rgba(0,0,0,0.7);
}

.profile-header { display:flex; align-items:center; margin-bottom:0.5rem; }
.profile-avatar { width:50px; height:50px; border-radius:50%; background: var(--primary-color); display:flex; align-items:center; justify-content:center; font-weight:700; margin-right:1rem; font-size:1.2rem; }

.profile-name { margin:0; font-weight:700; }
.profile-role { margin:0; color: var(--text-secondary); }

.profile-details span { display:block; font-size:0.9rem; margin-bottom:0.2rem; }

.skills-tags { display:flex; flex-wrap:wrap; gap:0.5rem; margin-top:0.5rem; }
.skill-tag { background:#333; color:#aaa; padding:0.25rem 0.75rem; border-radius:15px; font-size:0.8rem; }

.placeholder { display:flex; flex-direction:column; justify-content:center; align-items:center; text-align:center; margin-top:5rem; color:var(--text-secondary); }
.placeholder-icon { font-size:4rem; margin-bottom:1rem; }

/* Animations */
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes slideInUp { from { opacity:0; transform:translateY(20px);} to { opacity:1; transform:translateY(0); } }

.toggle-arrow { float:right; transition:0.3s ease; }
.toggle-arrow.rotated { transform: rotate(180deg); }
