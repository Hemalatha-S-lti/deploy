<div class="home-container">
  <!-- Left Column: Prompt Section & History -->
  <div class="prompt-section">
    <div class="prompt-card">
      <h2 class="title">Azure AI Search</h2>
      <p class="subtitle">AutoMates</p>

      <!-- Tagline -->
      <p class="tagline">Semantic search that knows what you mean.</p>

      <!-- Prompt input with future voice icon -->
      <div class="prompt-input-wrapper">
        <label class="sr-only" for="promptInput">Your prompt</label>
        <textarea
          id="promptInput"
          class="prompt-input"
          [(ngModel)]="prompt"
          placeholder="e.g., 'cloud architect with Azure skills'"
          (keydown.control.enter)="submitPrompt()"
          (keydown.meta.enter)="submitPrompt()"
        ></textarea>
        <!-- Future voice search icon -->
        <span class="voice-icon" title="Voice search coming soon">ðŸŽ¤</span>
      </div>

      <!-- Validation messages -->
      <p *ngIf="!prompt" class="validation-msg">Prompt cannot be empty.</p>
      <p *ngIf="prompt && prompt.length < 3" class="validation-msg">
        Please enter at least 3 characters.
      </p>

      <div class="actions">
        <button
          class="clear-btn"
          type="button"
          (click)="clearPrompt()"
          [disabled]="!prompt.length || isSubmitting"
        >
          Clear
        </button>
        <button
          class="primary-btn"
          type="button"
          (click)="submitPrompt()"
          [disabled]="!prompt || prompt.length < 3 || isSubmitting"
        >
          <span *ngIf="isSubmitting" class="spinner"></span>
          <span *ngIf="!isSubmitting">Find Candidates</span>
        </button>
      </div>
    </div>

    <!-- Previously submitted prompts -->
    <div *ngIf="submittedPrompts.length > 0" class="submitted-prompts">
      <h3 class="submitted-title">Recent Searches</h3>
      <div
        *ngFor="let p of submittedPrompts.slice().reverse(); trackBy: trackByPrompt"
        class="prompt-card-small"
      >
        <div class="prompt-history-header" (click)="p.show = !p.show">
          <span>"<strong>{{ p.prompt }}</strong>" ({{ p.count }})</span>
          <span class="toggle-arrow" [class.rotated]="p.show">â–¼</span>
        </div>
        <div *ngIf="p.show" class="summary-content">
          <p><strong>Summary:</strong> <em>{{ p.summary }}</em></p>
        </div>
      </div>
    </div>
  </div>

  <!-- Right Column: Results Section -->
  <div class="results-section">
    <div *ngIf="results.length > 0">
      <div class="results-header">
        <h3>Showing {{ resultCount }} results for:</h3>
        <p class="last-prompt">"{{ lastPrompt }}"</p>
      </div>

      <div *ngIf="summary" class="summary-card">
        <h4>AI Summary</h4>
        <p>{{ summary }}</p>
      </div>

      <details *ngIf="intent || searchRequest" class="details-dropdown">
        <summary>Show Search Details</summary>
        <div *ngIf="intent">
          <h4>Intent</h4>
          <pre class="code-block">{{ intent | json }}</pre>
        </div>
        <div *ngIf="searchRequest">
          <h4>Azure Search Request</h4>
          <pre class="code-block">{{ searchRequest | json }}</pre>
        </div>
      </details>

      <div class="profile-grid">
        <div
          *ngFor="let profile of results; let i = index; trackBy: trackByProfile"
          class="profile-card"
          [style.animation-delay]="i * 100 + 'ms'"
        >
          <div class="profile-header">
            <div class="profile-avatar">{{ profile.Name | slice : 0 : 1 }}</div>
            <div class="profile-info">
              <h4 class="profile-name">{{ profile.Name }}</h4>
              <p class="profile-role">{{ profile.Role }}</p>
            </div>
          </div>
          <div class="profile-body">
            <p class="profile-summary">{{ profile.ProfileSummary }}</p>
            <div class="profile-details">
              <span><strong>Location:</strong> {{ profile.Location }}</span>
              <span><strong>Experience:</strong> {{ profile.ExperienceYears }} years</span>
              <span><strong>Industry:</strong> {{ profile.Industry }}</span>
            </div>
            <div class="profile-skills">
              <strong>Skills:</strong>
              <div class="skills-tags">
                <span *ngFor="let skill of profile.Skills.split(', ')" class="skill-tag">
                  {{ skill }}
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div *ngIf="results.length === 0" class="placeholder">
      <div class="placeholder-icon">ðŸ“„</div>
      <h3>Your results will appear here</h3>
      <p>Enter a prompt to find candidates.</p>
    </div>
  </div>
</div>

/* Tagline styling */
.tagline {
  font-size: 1rem;
  font-style: italic;
  color: var(--text-secondary);
  margin-bottom: 1rem;
  transition: color 0.3s;
}

/* Validation messages */
.validation-msg {
  color: #ff6666;
  font-size: 0.9rem;
  margin: 0.5rem 0 0 0;
}

/* Wrapper for input + voice icon */
.prompt-input-wrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.prompt-input-wrapper .prompt-input {
  flex-grow: 1;
  padding-right: 2.5rem; /* space for icon */
  transition: box-shadow 0.3s, border-color 0.3s;
}

.prompt-input-wrapper .prompt-input:focus {
  box-shadow: 0 0 8px rgba(63, 81, 181, 0.5);
  border-color: var(--primary-color);
}

/* Voice icon placeholder */
.voice-icon {
  position: absolute;
  right: 0.75rem;
  cursor: pointer;
  font-size: 1.2rem;
  color: var(--text-secondary);
  transition: color 0.3s;
}

.voice-icon:hover {
  color: var(--primary-color);
}
